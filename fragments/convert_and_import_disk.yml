- name: Attempt to convert and attach a disk to the target VM
  block:
## Connect to the dedicated RHV HV and convert the RAW image over to VMDK
## "-pre" is suffixed here to indicate that it's pre-inflation. In testing, the inflation is required
## to be usable in VMWare. Supposedly it's not always required, but better safe than sorry.
## The image should be thinned back out once we do the storage vmotion anyways.
  - name: Convert disk from RAW to VMDK
    shell: "/usr/bin/qemu-img convert -f raw -O vmdk -o adapter_type=lsilogic,subformat=streamOptimized,compat6 -p /rhev/data-center/{{rhv_vm_datacenter_id}}/{{item.storage_domains[0].id}}/images/{{item.id}}/{{item.image_id}} /mnt/vmware_migration/{{vm_name}}-disk{{loop_index}}-pre.vmdk"
    delegate_to: "{{ groups['rhvhost'][0] }}"
## Async allowed up to 1 hour, might need to be manually increased for larger images.
    async: 7200
    poll: 0
    register: async_conversion

  - name: Check on disk conversion process
    async_status:
      jid: "{{ async_conversion.ansible_job_id }}"
    delegate_to: "{{ groups['rhvhost'][0] }}"
    register: async_conversion_result
    until: async_conversion_result.finished
## Should keep checking for up to an hour, check every 30 seconds
    retries: 240
    delay: 30

## All the "-i" flag really does is clone the VMDK, but it has the side-effect of inflating the VMDK
  - name: Inflate new VMDK
    raw: "/bin/vmkfstools -i /vmfs/volumes/vmware_migration/{{vm_name}}-disk{{loop_index}}-pre.vmdk /vmfs/volumes/vmware_migration/{{vm_name}}-disk{{loop_index}}-post.vmdk"
    delegate_to: "{{ groups['esxihost'][0] }}"

## We're specifying the "paravirtual" adapter here, but it really isn't necessary. Although it provides
## higher performance once you start reaching ~1,000,000 IOPs, none of our VMs are likely to come close to that
## For most workloads, LSI Logic Parallel/SAS would be indistinguishable from Paravirtual, but there's no reason
## not to start off on the right foot.
  - name: Attach VMDK to VM
    community.vmware.vmware_guest_disk:
      hostname: "{{ vcenter_endpoint }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      datacenter: "{{ vcenter_datacenter }}"
      moid: "{{ vmware_vm_info.moid }}"
      disk:
        - filename: "[vmware_migration] {{vm_name}}-disk{{loop_index}}-post.vmdk"
          scsi_controller: 0
          scsi_type: paravirtual
          unit_number: "{{loop_index}}"
    delegate_to: localhost

  always:
## We're removing the pre-inflate VMDK here to conserve space, it's not needed for anything after the 
## post-inflate image is attached to the target VM.
    - name: Clean up pre-inflate VMDK
      ansible.builtin.file:
        path: /mnt/vmware_migration/{{vm_name}}-disk{{loop_index}}-pre.vmdk
        state: absent
      delegate_to: "{{ groups['rhvhost'][0] }}"
